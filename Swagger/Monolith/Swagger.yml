swagger: "2.0"
info:
  description: "Placeholder"
  version: "1.0.0"
  title: "Assignment2"
 
host: "petstore.swagger.io"
basePath: "/v2"

tags:
- name: "Student"
  description: "Everything about a student"
  
 
- name: "Course"
  description: "Everything about a course"

- name: "Teacher"
  description: "Everything about a teacher"
  
paths:
  /Student:
    post:
      tags:
      - "Student"
      summary: "Enlist a Student at ITU"
      description: ""
      operationId: "EnlistStudent"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in : "body"
        name: "student"
        description: "Enlist a student"
        required: true
        schema:
          $ref: "#/definitions/Student"
      responses:
        "200":
          description: "OK"
    put:
      tags:
      - "Student"
      summary: "Update a new Student at ITU"
      description: ""
      operationId: "UpdateStudent"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Pet object that needs to be added to the store"
        required: false
        schema:
          $ref: "#/definitions/Student"
      responses:
        "200":
          description: "OK"
  /Student/{id}:
    get:
      tags:
      - "Student"
      summary: "Find student by ID"
      description: "Returns a single student"
      operationId: "getStudentByID"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of student to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "successful operation"
    delete:
      tags:
      - "Student"
      summary: "Deletes a Student"
      description: ""
      operationId: "deleteStudent"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Student id to delete"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "OK"
  /Course:
    post:
      tags:
      - "Course"
      summary: "Create a course"
      description: ""
      operationId: "CreateCourse"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in : "body"
        name: "Course"
        description: "Create a course"
        required: true
        schema:
          $ref: "#/definitions/Course"
      responses:
        "200":
          description: "OK"
    put:
      tags:
      - "Course"
      summary: "Updates a course at ITU"
      description: ""
      operationId: "UpdateCourse"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Course that needs to be updated"
        required: false
        schema:
          $ref: "#/definitions/Course"
      responses:
        "200":
          description: "OK"
    get:
      tags:
      - "Course"
      summary: " Returns all courses"
      operationId: "GetAllCourses"
      produces:
      - "application/xml"
      - "application/json"
      responses:
        "200":
          description: "OK"
            
          
          
  /Course/Students:
    get:
      tags:
      - "Course"
      summary: " Returns all students attending a course"
      operationId: "GetAllStudents"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "Course ID"
        in: "query"
        type: "integer"
        format: "int64"
        required: true
        
      responses:
       "200":
        description: "successful operation"
        schema:
          type: "object"
          additionalProperties:
            type: "object"
            properties:
              id:
                type: "string"
              firstname:
                type: "string"
              lastName:
                type: "string"
              Email:
                type: "string"
  
  /Course/{id}:
    get:
      tags:
      - "Course"
      summary: "Find course by ID"
      description: "Returns a single course"
      operationId: "GetCourseByID"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of course to return"
        required: true
        type: "string"
      responses:
        "200":
          description: "successful operation"
    delete:
      tags:
      - "Course"
      summary: "Deletes a course"
      description: ""
      operationId: "deleteCourse"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Course id to delete"
        required: true
        type: "string"
      responses:
        "200":
          description: "OK"
  /Teacher:
    post:
      tags:
      - "Teacher"
      summary: "Enlist a Teacher at ITU"
      description: ""
      operationId: "EnlistTeacher"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in : "body"
        name: "student"
        description: "Enlist a teacher"
        required: true
        schema:
          $ref: "#/definitions/Teacher"
      responses:
        "200":
          description: "OK"
    put:
      tags:
      - "Teacher"
      summary: "Update a teacher at ITU"
      description: ""
      operationId: "UpdateTeacher"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Pet object that needs to be added to the store"
        required: false
        schema:
          $ref: "#/definitions/Teacher"
      responses:
        "200":
          description: "OK"
  /Teacher/{id}:
    get:
      tags:
      - "Teacher"
      summary: "Find teacher by ID"
      description: "Returns a single teacher"
      operationId: "getTeacherByID"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of teacher to return"
        required: true
        type: "string"
      responses:
        "200":
          description: "successful operation"
    delete:
      tags:
      - "Teacher"
      summary: "Deletes a teacher"
      description: ""
      operationId: "deleteTeacher"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Teacher id to delete"
        required: true
        type: "string"
      responses:
        "200":
          description: "OK"
          
      
definitions:
  Student:
    type: "object"
    properties:
      id:
        type: "string"
      firstname:
        type: "string"
      lastname:
        type: "string"
      Email:
        type: "string"
      SatificationRating:
        type: "number"
        minimum: 1
        maximum: 5 
      TeacherRating:
        type: "number"
        minimum: 1
        maximum: 5
      CoursesAttending:
        type: "object"
        $ref: "#/definitions/Course"
  
  Teacher:
    type: "object"
    properties:
      id:
        type: "string"
      firstname:
        type: "string"
      lastname:
        type: "string"
      Email:
        type: "string"
      PopularityscoreByAllStudentsAttendingCourse:
        type: "number"
        
  Course:
    type: "object"
    properties:
      id:
        type: "string"
      coursename:
        type: "string"
      courseTeacher:
        type: "object"
        $ref: "#/definitions/Teacher"
      Workload(ETCS):
        type: "number"
      SatificationRatingByAllStudentsAttendingCourse:
        type: "number"
        
        
        
        
    



 
  
